# Runner.sh.rc - run commands on Runner.sh and Cleaner.sh startup. Store and exec in WEB-INF directory.
#

# enum LOGLEVEL { NONE, FAIL, WARN, INFO }
info() {
	(( ${LOGLEVEL:-0} > 2 )) && echo $(date +%Y/%m/%d\ %H:%M:%S) : INFO : Charta Caeli web service : $this : $1 ; return 0
}
warn() {
	(( ${LOGLEVEL:-0} > 1 )) && echo $(date +%Y/%m/%d\ %H:%M:%S) : WARN : Charta Caeli web service : $this : $1 ; return 0
}
fail() {
	(( ${LOGLEVEL:-0} > 0 )) && echo $(date +%Y/%m/%d\ %H:%M:%S) : FAIL : Charta Caeli web service : $this : $1 ; return 0
}

probeJRE() {
	${JAVA:=java} -version >/dev/null 2>&1

	return $?
}

probeBASDIR() {
	dir=${BASDIR:=/opt/chartacaeli/db}
	( cd $dir ) >/dev/null 2>&1

	return $?
}

probeDB() {
	$JAVA -cp ${CLASSPATH:-lib/h2-*.jar} org.h2.tools.Shell \
	-url ${DBURL:=jdbc:h2:tcp://localhost/./ChartDB;FILE_LOCK=NO} \
	-user ${DBUSER:=chartacaeli} -password ${DBPASS:=chartaca3li} \
	-sql "" >/dev/null 2>&1

	return $?
}

probeOUTDIR() {
	dir=${OUTDIR:=/opt/chartacaeli/db}
	( cd $dir ) >/dev/null 2>&1

	return $?
}

probeAPPDIR() {
	dir=${APPDIR:=/opt/chartacaeli/web/WEB-INF}
	( cd $dir ) >/dev/null 2>&1

	return $?
}

probeAPPEXE() {
	probeAPPDIR && test -x $APPDIR/${APPEXE:=chartacaeli.sh}

	return $?
}

probeGS() {
	type ${GS:=gs} >/dev/null 2>&1 \
	&& ( $GS -version | grep Ghostscript >/dev/null )

	return $?
}

probeIM() {
	type magick >/dev/null 2>&1 \
	&& ( magick -version | grep ImageMagick >/dev/null )

	return $?
}

updateDB() {
	$JAVA -cp ${CLASSPATH:-lib/h2-*.jar} org.h2.tools.Shell \
	-url $DBURL -user $DBUSER -password $DBPASS \
	-sql "UPDATE charts SET stat = '$2', modified = '$(date +%s)000' WHERE id = '$1'" 2>&1

	return $?
}

termrnnr() {
	[ -z "$id" ] \
	&& { LOGLEVEL=3 info "terminate upon signal." ; exit 0 ; } \
	|| ( LOGLEVEL=3 info "rollback $id and exit upon signal." )

	rm -f $pdf $log $err

	dbo=$($JAVA -cp ${CLASSPATH:-lib/h2-*.jar} org.h2.tools.Shell \
	-url $DBURL -user $DBUSER -password $DBPASS \
	-sql "UPDATE charts SET stat = 'accepted', modified = '$(date +%s)000' WHERE id = '$id'" 2>&1)

	[ $? -eq 0 ] \
	&& { info "succesfully rolled back $i : ${dbo:-null}" ; exit 0 ; } \
	|| { fail "failed to roll back $i : ${dbo:-null}" ; exit 1 ; }
}

termclnr() {
	( LOGLEVEL=3 info "terminate upon signal." )

	exit 0
}
